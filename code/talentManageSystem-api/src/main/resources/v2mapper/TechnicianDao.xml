<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ucl.group.excelSystem.api.db.dao.TechnicianDao">

    <!-- 基本的ResultMap -->
    <resultMap id="BasicTechnicianMap" type="ucl.group.excelSystem.api.db.pojo.BasicTechnicianEntity">
        <id column="technician_id" property="technicianId"/>
        <result column="name" property="name"/>
        <result column="picture" property="picture"/>
        <result column="katakana" property="katakana"/>
        <result column="roman" property="roman"/>
        <result column="birthday" property="birthday"/>
        <result column="representative" property="representative"/>
        <result column="belong_company" property="belongCompany"/>
        <result column="del_flag" property="delFlag"/>
        <result column="create_time" property="createTime"/>
        <result column="create_by" property="createBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <sql id="technicianQuery">
        select
        bt.technician_id ,
        bt.name ,
        bt.picture ,
        bt.katakana ,
        bt.roman,
        bt.birthday ,
        bt.representative ,
        bt.belong_company,
        bt.remark
        from basic_v2_technician bt
    </sql>

    <insert id="insertTech" parameterType="ucl.group.excelSystem.api.db.pojo.BasicTechnicianEntity">
        insert into basic_v2_technician (
        name, picture, katakana, roman, birthday, belong_company, representative,
        del_flag, create_time, create_by, remark, belong_company_id
        )
        values (
        #{name}, #{picture}, #{katakana}, #{roman}, #{birthday}, #{belongCompany}, #{representative},
        #{delFlag}, now(), #{createBy}, #{remark}, #{belongCompanyId}
        );
    </insert>
    <update id="updateTech" parameterType="ucl.group.excelSystem.api.db.pojo.BasicTechnicianEntity">
        UPDATE basic_v2_technician
        <set>
            name=#{name},
            picture=#{picture},
            katakana=#{katakana},
            roman=#{roman},
            birthday=#{birthday},
            belong_company=#{belongCompany},
            representative=#{representative},
            del_flag='0',
            update_time=NOW(),
            update_by=#{updateBy},
            remark=#{remark},
            belong_company_id=#{belongCompanyId}
        </set>
        WHERE technician_id=#{technicianId};
    </update>
    <update id="updateTotalByYearMonth" parameterType="map">
        UPDATE basic_v2_month
        SET total_number = #{totalNumber}
        WHERE `year_month` = #{yearMonth,jdbcType=DATE}
    </update>
    <delete id="deleteTech">
        update basic_v2_technician
        set del_flag = 2
        where technician_id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>


    <!-- 根据ID查询 -->
    <select id="searchById" resultMap="BasicTechnicianMap" parameterType="long">
        <include refid="technicianQuery"/>
        where bt.technician_id = #{technicianId}
    </select>
    <select id="selectTechByPageCount" parameterType="map" resultType="java.lang.Long">
        select
        count(technician_id)
        from
        basic_v2_technician bt
        where
        del_flag = 0
        <if test="techName!=null">
            and bt.name like '%${techName}%'
        </if>
        <if test="katakan!=null">
            and bt.name like '%${katakan}%'
        </if>
        <if test="roman!=null">
            and bt.roman like '%${roman}%'
        </if>
    </select>
    <select id="selectTechByPage" parameterType="map" resultType="java.util.HashMap">
        <!--SELECT
            technician_id AS technicianId,
            name AS technicianName,
            picture,
            katakana,
            roman,
            birthday,
            belong_company AS belongCompany,
            representative,
            remark
        FROM
            basic_v2_technician
        where
            del_flag = 0
        <if test="techName!=null">
            and name like '%${techName}%'
        </if>
        <if test="katakan!=null">
            and bt.name like '%${katakan}%'
        </if>
        <if test="roman!=null">
            and bt.roman like '%${roman}%'
        </if>
        LIMIT ${length} OFFSET ${start}-->
        SELECT
        bt.technician_id AS technicianId,
        bt.name AS technicianName,
        bt.picture,
        bt.katakana,
        bt.roman,
        bt.birthday,
        pc.company_name AS belongCompany,
        bt.representative,
        bt.remark
        from basic_v2_technician bt
        LEFT JOIN
        basic_v2_partner_company pc
        ON bt.belong_company_id = pc.partner_company_id
        WHERE bt.del_flag = 0
        <if test="techName != null">AND bt.name LIKE '%${techName}%'</if>
        <if test="katakan != null">AND bt.katakana LIKE '%${katakan}%'</if>
        <if test="roman != null">AND bt.roman LIKE '%${roman}%'</if>
        LIMIT ${length} OFFSET ${start}
    </select>

    <select id="searchByIds" resultType="ucl.group.excelSystem.api.db.pojo.BasicTechnicianEntity">
        <include refid="technicianQuery"/>
        where bt.technician_id in
        <foreach collection="technicianIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

</mapper>
